{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/codejar/codejar.js","../../src/Board.svelte","../../src/parser.ts","../../node_modules/typescript-parsec/lib/Lexer.js","../../node_modules/typescript-parsec/lib/Parsers/ParserInterface.js","../../node_modules/typescript-parsec/lib/Parsers/TokenParser.js","../../node_modules/typescript-parsec/lib/Parsers/SequencialParser.js","../../node_modules/typescript-parsec/lib/Parsers/AlternativeParser.js","../../node_modules/typescript-parsec/lib/Parsers/OptionalParser.js","../../node_modules/typescript-parsec/lib/Parsers/ApplyParser.js","../../node_modules/typescript-parsec/lib/Parsers/RepeativeParser.js","../../node_modules/typescript-parsec/lib/Parsers/AmbiguousParser.js","../../node_modules/typescript-parsec/lib/Parsers/ErrorParser.js","../../node_modules/typescript-parsec/lib/Parsers/Rule.js","../../node_modules/typescript-parsec/lib/index.js","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const globalWindow = window;\nexport function CodeJar(editor, highlight, opt = {}) {\n    const options = Object.assign({ tab: '\\t', indentOn: /{$/, spellcheck: false, catchTab: true, preserveIdent: true, addClosing: true, history: true, window: globalWindow }, opt);\n    const window = options.window;\n    const document = window.document;\n    let listeners = [];\n    let history = [];\n    let at = -1;\n    let focus = false;\n    let callback;\n    let prev; // code content prior keydown event\n    editor.setAttribute('contenteditable', 'plaintext-only');\n    editor.setAttribute('spellcheck', options.spellcheck ? 'true' : 'false');\n    editor.style.outline = 'none';\n    editor.style.overflowWrap = 'break-word';\n    editor.style.overflowY = 'auto';\n    editor.style.whiteSpace = 'pre-wrap';\n    let isLegacy = false; // true if plaintext-only is not supported\n    highlight(editor);\n    if (editor.contentEditable !== 'plaintext-only')\n        isLegacy = true;\n    if (isLegacy)\n        editor.setAttribute('contenteditable', 'true');\n    const debounceHighlight = debounce(() => {\n        const pos = save();\n        highlight(editor, pos);\n        restore(pos);\n    }, 30);\n    let recording = false;\n    const shouldRecord = (event) => {\n        return !isUndo(event) && !isRedo(event)\n            && event.key !== 'Meta'\n            && event.key !== 'Control'\n            && event.key !== 'Alt'\n            && !event.key.startsWith('Arrow');\n    };\n    const debounceRecordHistory = debounce((event) => {\n        if (shouldRecord(event)) {\n            recordHistory();\n            recording = false;\n        }\n    }, 300);\n    const on = (type, fn) => {\n        listeners.push([type, fn]);\n        editor.addEventListener(type, fn);\n    };\n    on('keydown', event => {\n        if (event.defaultPrevented)\n            return;\n        prev = toString();\n        if (options.preserveIdent)\n            handleNewLine(event);\n        else\n            legacyNewLineFix(event);\n        if (options.catchTab)\n            handleTabCharacters(event);\n        if (options.addClosing)\n            handleSelfClosingCharacters(event);\n        if (options.history) {\n            handleUndoRedo(event);\n            if (shouldRecord(event) && !recording) {\n                recordHistory();\n                recording = true;\n            }\n        }\n        if (isLegacy)\n            restore(save());\n    });\n    on('keyup', event => {\n        if (event.defaultPrevented)\n            return;\n        if (event.isComposing)\n            return;\n        if (prev !== toString())\n            debounceHighlight();\n        debounceRecordHistory(event);\n        if (callback)\n            callback(toString());\n    });\n    on('focus', _event => {\n        focus = true;\n    });\n    on('blur', _event => {\n        focus = false;\n    });\n    on('paste', event => {\n        recordHistory();\n        handlePaste(event);\n        recordHistory();\n        if (callback)\n            callback(toString());\n    });\n    function save() {\n        const s = getSelection();\n        const pos = { start: 0, end: 0, dir: undefined };\n        let { anchorNode, anchorOffset, focusNode, focusOffset } = s;\n        if (!anchorNode || !focusNode)\n            throw 'error1';\n        // Selection anchor and focus are expected to be text nodes,\n        // so normalize them.\n        if (anchorNode.nodeType === Node.ELEMENT_NODE) {\n            const node = document.createTextNode('');\n            anchorNode.insertBefore(node, anchorNode.childNodes[anchorOffset]);\n            anchorNode = node;\n            anchorOffset = 0;\n        }\n        if (focusNode.nodeType === Node.ELEMENT_NODE) {\n            const node = document.createTextNode('');\n            focusNode.insertBefore(node, focusNode.childNodes[focusOffset]);\n            focusNode = node;\n            focusOffset = 0;\n        }\n        visit(editor, el => {\n            if (el === anchorNode && el === focusNode) {\n                pos.start += anchorOffset;\n                pos.end += focusOffset;\n                pos.dir = anchorOffset <= focusOffset ? '->' : '<-';\n                return 'stop';\n            }\n            if (el === anchorNode) {\n                pos.start += anchorOffset;\n                if (!pos.dir) {\n                    pos.dir = '->';\n                }\n                else {\n                    return 'stop';\n                }\n            }\n            else if (el === focusNode) {\n                pos.end += focusOffset;\n                if (!pos.dir) {\n                    pos.dir = '<-';\n                }\n                else {\n                    return 'stop';\n                }\n            }\n            if (el.nodeType === Node.TEXT_NODE) {\n                if (pos.dir != '->')\n                    pos.start += el.nodeValue.length;\n                if (pos.dir != '<-')\n                    pos.end += el.nodeValue.length;\n            }\n        });\n        // collapse empty text nodes\n        editor.normalize();\n        return pos;\n    }\n    function restore(pos) {\n        const s = getSelection();\n        let startNode, startOffset = 0;\n        let endNode, endOffset = 0;\n        if (!pos.dir)\n            pos.dir = '->';\n        if (pos.start < 0)\n            pos.start = 0;\n        if (pos.end < 0)\n            pos.end = 0;\n        // Flip start and end if the direction reversed\n        if (pos.dir == '<-') {\n            const { start, end } = pos;\n            pos.start = end;\n            pos.end = start;\n        }\n        let current = 0;\n        visit(editor, el => {\n            if (el.nodeType !== Node.TEXT_NODE)\n                return;\n            const len = (el.nodeValue || '').length;\n            if (current + len > pos.start) {\n                if (!startNode) {\n                    startNode = el;\n                    startOffset = pos.start - current;\n                }\n                if (current + len > pos.end) {\n                    endNode = el;\n                    endOffset = pos.end - current;\n                    return 'stop';\n                }\n            }\n            current += len;\n        });\n        if (!startNode)\n            startNode = editor, startOffset = editor.childNodes.length;\n        if (!endNode)\n            endNode = editor, endOffset = editor.childNodes.length;\n        // Flip back the selection\n        if (pos.dir == '<-') {\n            [startNode, startOffset, endNode, endOffset] = [endNode, endOffset, startNode, startOffset];\n        }\n        s.setBaseAndExtent(startNode, startOffset, endNode, endOffset);\n    }\n    function beforeCursor() {\n        const s = getSelection();\n        const r0 = s.getRangeAt(0);\n        const r = document.createRange();\n        r.selectNodeContents(editor);\n        r.setEnd(r0.startContainer, r0.startOffset);\n        return r.toString();\n    }\n    function afterCursor() {\n        const s = getSelection();\n        const r0 = s.getRangeAt(0);\n        const r = document.createRange();\n        r.selectNodeContents(editor);\n        r.setStart(r0.endContainer, r0.endOffset);\n        return r.toString();\n    }\n    function handleNewLine(event) {\n        if (event.key === 'Enter') {\n            const before = beforeCursor();\n            const after = afterCursor();\n            let [padding] = findPadding(before);\n            let newLinePadding = padding;\n            // If last symbol is \"{\" ident new line\n            // Allow user defines indent rule\n            if (options.indentOn.test(before)) {\n                newLinePadding += options.tab;\n            }\n            // Preserve padding\n            if (newLinePadding.length > 0) {\n                preventDefault(event);\n                event.stopPropagation();\n                insert('\\n' + newLinePadding);\n            }\n            else {\n                legacyNewLineFix(event);\n            }\n            // Place adjacent \"}\" on next line\n            if (newLinePadding !== padding && after[0] === '}') {\n                const pos = save();\n                insert('\\n' + padding);\n                restore(pos);\n            }\n        }\n    }\n    function legacyNewLineFix(event) {\n        // Firefox does not support plaintext-only mode\n        // and puts <div><br></div> on Enter. Let's help.\n        if (isLegacy && event.key === 'Enter') {\n            preventDefault(event);\n            event.stopPropagation();\n            if (afterCursor() == '') {\n                insert('\\n ');\n                const pos = save();\n                pos.start = --pos.end;\n                restore(pos);\n            }\n            else {\n                insert('\\n');\n            }\n        }\n    }\n    function handleSelfClosingCharacters(event) {\n        const open = `([{'\"`;\n        const close = `)]}'\"`;\n        const codeAfter = afterCursor();\n        const codeBefore = beforeCursor();\n        const escapeCharacter = codeBefore.substr(codeBefore.length - 1) === '\\\\';\n        const charAfter = codeAfter.substr(0, 1);\n        if (close.includes(event.key) && !escapeCharacter && charAfter === event.key) {\n            // We already have closing char next to cursor.\n            // Move one char to right.\n            const pos = save();\n            preventDefault(event);\n            pos.start = ++pos.end;\n            restore(pos);\n        }\n        else if (open.includes(event.key)\n            && !escapeCharacter\n            && (`\"'`.includes(event.key) || ['', ' ', '\\n'].includes(charAfter))) {\n            preventDefault(event);\n            const pos = save();\n            const wrapText = pos.start == pos.end ? '' : getSelection().toString();\n            const text = event.key + wrapText + close[open.indexOf(event.key)];\n            insert(text);\n            pos.start++;\n            pos.end++;\n            restore(pos);\n        }\n    }\n    function handleTabCharacters(event) {\n        if (event.key === 'Tab') {\n            preventDefault(event);\n            if (event.shiftKey) {\n                const before = beforeCursor();\n                let [padding, start,] = findPadding(before);\n                if (padding.length > 0) {\n                    const pos = save();\n                    // Remove full length tab or just remaining padding\n                    const len = Math.min(options.tab.length, padding.length);\n                    restore({ start, end: start + len });\n                    document.execCommand('delete');\n                    pos.start -= len;\n                    pos.end -= len;\n                    restore(pos);\n                }\n            }\n            else {\n                insert(options.tab);\n            }\n        }\n    }\n    function handleUndoRedo(event) {\n        if (isUndo(event)) {\n            preventDefault(event);\n            at--;\n            const record = history[at];\n            if (record) {\n                editor.innerHTML = record.html;\n                restore(record.pos);\n            }\n            if (at < 0)\n                at = 0;\n        }\n        if (isRedo(event)) {\n            preventDefault(event);\n            at++;\n            const record = history[at];\n            if (record) {\n                editor.innerHTML = record.html;\n                restore(record.pos);\n            }\n            if (at >= history.length)\n                at--;\n        }\n    }\n    function recordHistory() {\n        if (!focus)\n            return;\n        const html = editor.innerHTML;\n        const pos = save();\n        const lastRecord = history[at];\n        if (lastRecord) {\n            if (lastRecord.html === html\n                && lastRecord.pos.start === pos.start\n                && lastRecord.pos.end === pos.end)\n                return;\n        }\n        at++;\n        history[at] = { html, pos };\n        history.splice(at + 1);\n        const maxHistory = 300;\n        if (at > maxHistory) {\n            at = maxHistory;\n            history.splice(0, 1);\n        }\n    }\n    function handlePaste(event) {\n        preventDefault(event);\n        const text = (event.originalEvent || event)\n            .clipboardData\n            .getData('text/plain')\n            .replace(/\\r/g, '');\n        const pos = save();\n        insert(text);\n        highlight(editor);\n        restore({ start: pos.start + text.length, end: pos.start + text.length });\n    }\n    function visit(editor, visitor) {\n        const queue = [];\n        if (editor.firstChild)\n            queue.push(editor.firstChild);\n        let el = queue.pop();\n        while (el) {\n            if (visitor(el) === 'stop')\n                break;\n            if (el.nextSibling)\n                queue.push(el.nextSibling);\n            if (el.firstChild)\n                queue.push(el.firstChild);\n            el = queue.pop();\n        }\n    }\n    function isCtrl(event) {\n        return event.metaKey || event.ctrlKey;\n    }\n    function isUndo(event) {\n        return isCtrl(event) && !event.shiftKey && event.code === 'KeyZ';\n    }\n    function isRedo(event) {\n        return isCtrl(event) && event.shiftKey && event.code === 'KeyZ';\n    }\n    function insert(text) {\n        text = text\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#039;');\n        document.execCommand('insertHTML', false, text);\n    }\n    function debounce(cb, wait) {\n        let timeout = 0;\n        return (...args) => {\n            clearTimeout(timeout);\n            timeout = window.setTimeout(() => cb(...args), wait);\n        };\n    }\n    function findPadding(text) {\n        // Find beginning of previous line.\n        let i = text.length - 1;\n        while (i >= 0 && text[i] !== '\\n')\n            i--;\n        i++;\n        // Find padding of the line.\n        let j = i;\n        while (j < text.length && /[ \\t]/.test(text[j]))\n            j++;\n        return [text.substring(i, j) || '', i, j];\n    }\n    function toString() {\n        return editor.textContent || '';\n    }\n    function preventDefault(event) {\n        event.preventDefault();\n    }\n    function getSelection() {\n        var _a;\n        if (((_a = editor.parentNode) === null || _a === void 0 ? void 0 : _a.nodeType) == Node.DOCUMENT_FRAGMENT_NODE) {\n            return editor.parentNode.getSelection();\n        }\n        return window.getSelection();\n    }\n    return {\n        updateOptions(newOptions) {\n            Object.assign(options, newOptions);\n        },\n        updateCode(code) {\n            editor.textContent = code;\n            highlight(editor);\n        },\n        onUpdate(cb) {\n            callback = cb;\n        },\n        toString,\n        save,\n        restore,\n        recordHistory,\n        destroy() {\n            for (let [type, fn] of listeners) {\n                editor.removeEventListener(type, fn);\n            }\n        },\n    };\n}\n","<script>\n    export let board = Array(10).fill(Array(10));\n</script>\n\n<div class=\"board\">\n    {#each board as row, i}\n        <div class=\"row\">\n            {#each row as color}\n                <div class=\"cell\" data-color={color} />\n            {/each}\n            <div class=\"num\">{i}</div>\n        </div>\n    {/each}\n    <div class=\"row\">\n        {#each board[0] as _, i}\n            <div class=\"num\">{i}</div>\n        {/each}\n    </div>\n</div>\n\n<style>\n    .row {\n        display: flex;\n        flex-direction: row;\n        margin-bottom: 0.2em;\n    }\n\n    .row:last-child {\n        margin-bottom: 0;\n    }\n\n    .cell {\n        width: 1.3em;\n        height: 1.3em;\n        border: 1px solid gray;\n        margin-left: 0.2em;\n    }\n\n    .num {\n        margin-left: 0.2em;\n        width: 1.3em;\n        height: 1.3em;\n        color: #333;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n</style>\n","import { rep_sc } from 'typescript-parsec';\nimport { buildLexer, expectEOF, expectSingleResult, rule } from 'typescript-parsec';\nimport { alt, apply, kmid, lrec_sc, seq, tok } from 'typescript-parsec';\nexport var K;\n(function (K) {\n    K[K[\"If\"] = 0] = \"If\";\n    K[K[\"Each\"] = 1] = \"Each\";\n    K[K[\"From\"] = 2] = \"From\";\n    K[K[\"To\"] = 3] = \"To\";\n    K[K[\"End\"] = 4] = \"End\";\n    K[K[\"Comment\"] = 5] = \"Comment\";\n    K[K[\"Number\"] = 6] = \"Number\";\n    K[K[\"Op1\"] = 7] = \"Op1\";\n    K[K[\"Op2\"] = 8] = \"Op2\";\n    K[K[\"Assign\"] = 9] = \"Assign\";\n    K[K[\"Comma\"] = 10] = \"Comma\";\n    K[K[\"Col\"] = 11] = \"Col\";\n    K[K[\"LP\"] = 12] = \"LP\";\n    K[K[\"RP\"] = 13] = \"RP\";\n    K[K[\"WS\"] = 14] = \"WS\";\n    K[K[\"Name\"] = 15] = \"Name\";\n})(K || (K = {}));\nconst KW_ENGLISH = {\n    If: 'if',\n    Each: 'each',\n    From: 'from',\n    To: 'to',\n    End: 'end',\n};\nexport const KW_HEBREW = {\n    If: 'אם',\n    Each: 'לכל',\n    From: 'מ',\n    To: 'עד',\n    End: 'סוף',\n};\nexport function getLexer(keepWs = false, KW = KW_ENGLISH) {\n    return buildLexer([\n        [keepWs, /^\\s+/g, K.WS],\n        [true, /^#[^\\n]*/g, K.Comment],\n        [true, new RegExp(`^${KW.If}`, 'g'), K.If],\n        [true, new RegExp(`^${KW.Each}`, 'g'), K.Each],\n        [true, new RegExp(`^${KW.From}`, 'g'), K.From],\n        [true, new RegExp(`^${KW.To}`, 'g'), K.To],\n        [true, new RegExp(`^${KW.End}`, 'g'), K.End],\n        [true, /^\\d+/g, K.Number],\n        [true, /^=/g, K.Assign],\n        [true, /^[*/%]/g, K.Op1],\n        [true, /^[-+]/g, K.Op2],\n        [true, /^,/g, K.Comma],\n        [true, /^:/g, K.Col],\n        [true, /^\\(/g, K.LP],\n        [true, /^\\)/g, K.RP],\n        [true, /^[a-z_א-ת]+/g, K.Name],\n    ]);\n}\nconst ops = {\n    '-': (a, b) => a - b,\n    '+': (a, b) => a + b,\n    '*': (a, b) => a * b,\n    '/': (a, b) => a / b,\n    '%': (a, b) => a % b,\n};\nexport function parse(input, { lexer = getLexer(), host = { vars: {}, funcs: {} } } = {}) {\n    function n(num) {\n        return +num.text;\n    }\n    function expVar(name) {\n        const v = name.text;\n        if (!(v in host.vars)) {\n            host.vars[v] = 0;\n        }\n        return {\n            eval: () => host.vars[v]\n        };\n    }\n    function expNum(num) {\n        return {\n            eval: () => n(num)\n        };\n    }\n    function expOp(first, tail) {\n        return {\n            eval: () => ops[tail[0].text](first.eval(), tail[1].eval())\n        };\n    }\n    function expFuncCall(value) {\n        const [name, args] = value;\n        if (!(name.text in host.funcs)) {\n            host.funcs[name.text] = (...args) => 0;\n        }\n        return {\n            eval: () => {\n                const vals = args.map(x => x.eval());\n                return host.funcs[name.text](...vals);\n            }\n        };\n    }\n    function args(args, arg) {\n        args.push(arg[1]);\n        return args;\n    }\n    const ARGS = rule();\n    const TERM = rule();\n    const FACTOR = rule();\n    const EXP = rule();\n    const FUNC_CALL = rule();\n    const ASSIGN = rule();\n    const EACH = rule();\n    const IF = rule();\n    const COMMENT = rule();\n    const STMT = rule();\n    const PROG = rule();\n    ARGS.setPattern(alt(apply(seq(tok(K.LP), tok(K.RP)), () => []), kmid(tok(K.LP), lrec_sc(apply(EXP, e => [e]), seq(tok(K.Comma), EXP), args), tok(K.RP))));\n    TERM.setPattern(alt(apply(tok(K.Name), expVar), apply(tok(K.Number), expNum), kmid(tok(K.LP), EXP, tok(K.RP))));\n    FACTOR.setPattern(lrec_sc(TERM, seq(tok(K.Op1), TERM), expOp));\n    EXP.setPattern(alt(lrec_sc(FACTOR, seq(tok(K.Op2), FACTOR), expOp), FUNC_CALL));\n    FUNC_CALL.setPattern(apply(seq(tok(K.Name), ARGS), expFuncCall));\n    function expEach(value) {\n        const [$1, name, $2, fromExp, $3, toExp, $4, prog, $5] = value;\n        return {\n            eval: () => {\n                for (let i = fromExp.eval(); i <= toExp.eval(); i++) {\n                    host.vars[name.text] = i;\n                    prog.forEach(s => s.eval());\n                }\n                return 0;\n            }\n        };\n    }\n    EACH.setPattern(apply(seq(tok(K.Each), tok(K.Name), tok(K.From), EXP, tok(K.To), EXP, tok(K.Col), PROG, tok(K.End)), expEach));\n    function expIf(value) {\n        const [$1, cond, $2, prog, $3] = value;\n        return {\n            eval: () => {\n                const v = cond.eval();\n                if (v) {\n                    prog.forEach(s => s.eval());\n                }\n                return v;\n            }\n        };\n    }\n    IF.setPattern(apply(seq(tok(K.If), EXP, tok(K.Col), PROG, tok(K.End)), expIf));\n    function expAssign(value) {\n        const [name, _, exp] = value;\n        return {\n            eval: () => {\n                return host.vars[name.text] = exp.eval();\n            }\n        };\n    }\n    ASSIGN.setPattern(apply(seq(tok(K.Name), tok(K.Assign), EXP), expAssign));\n    COMMENT.setPattern(apply(tok(K.Comment), () => { return { eval: () => 0 }; }));\n    STMT.setPattern(alt(ASSIGN, FUNC_CALL, EACH, IF, COMMENT));\n    PROG.setPattern(rep_sc(STMT));\n    return expectSingleResult(expectEOF(PROG.parse(lexer.parse(input))));\n}\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.buildLexer = exports.extractByTokenRange = exports.extractByPositionRange = exports.TokenRangeError = exports.TokenError = void 0;\r\nfunction posToString(pos) {\r\n    return pos === undefined ? '<END-OF-FILE>' : JSON.stringify(pos);\r\n}\r\nvar TokenError = /** @class */ (function (_super) {\r\n    __extends(TokenError, _super);\r\n    function TokenError(pos, errorMessage) {\r\n        var _this = _super.call(this, posToString(pos) + \": \" + errorMessage) || this;\r\n        _this.pos = pos;\r\n        _this.errorMessage = errorMessage;\r\n        return _this;\r\n    }\r\n    return TokenError;\r\n}(Error));\r\nexports.TokenError = TokenError;\r\nvar TokenRangeError = /** @class */ (function (_super) {\r\n    __extends(TokenRangeError, _super);\r\n    function TokenRangeError(first, next, errorMessage) {\r\n        var _this = _super.call(this, posToString(first) + \" - \" + posToString(next) + \": \" + errorMessage) || this;\r\n        _this.first = first;\r\n        _this.next = next;\r\n        _this.errorMessage = errorMessage;\r\n        return _this;\r\n    }\r\n    return TokenRangeError;\r\n}(Error));\r\nexports.TokenRangeError = TokenRangeError;\r\nfunction extractByPositionRange(input, first, next) {\r\n    var firstIndex = first === undefined ? input.length : first.index;\r\n    var nextIndex = next === undefined ? input.length : next.index;\r\n    if (firstIndex >= nextIndex) {\r\n        return '';\r\n    }\r\n    return input.substring(firstIndex, nextIndex);\r\n}\r\nexports.extractByPositionRange = extractByPositionRange;\r\nfunction extractByTokenRange(input, first, next) {\r\n    return extractByPositionRange(input, (first === undefined ? undefined : first.pos), (next === undefined ? undefined : next.pos));\r\n}\r\nexports.extractByTokenRange = extractByTokenRange;\r\nvar TokenImpl = /** @class */ (function () {\r\n    function TokenImpl(lexer, input, kind, text, pos, keep) {\r\n        this.lexer = lexer;\r\n        this.input = input;\r\n        this.kind = kind;\r\n        this.text = text;\r\n        this.pos = pos;\r\n        this.keep = keep;\r\n    }\r\n    Object.defineProperty(TokenImpl.prototype, \"next\", {\r\n        get: function () {\r\n            if (this.nextToken === undefined) {\r\n                this.nextToken = this.lexer.parseNextAvailable(this.input, this.pos.index + this.text.length, this.pos.rowEnd, this.pos.columnEnd);\r\n                if (this.nextToken === undefined) {\r\n                    this.nextToken = null;\r\n                }\r\n            }\r\n            return this.nextToken === null ? undefined : this.nextToken;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return TokenImpl;\r\n}());\r\nvar LexerImpl = /** @class */ (function () {\r\n    function LexerImpl(rules) {\r\n        this.rules = rules;\r\n        for (var _i = 0, _a = this.rules; _i < _a.length; _i++) {\r\n            var rule = _a[_i];\r\n            if (rule[1].source[0] !== '^') {\r\n                throw new Error(\"Regular expression patterns for a tokenizer should start with \\\"^\\\": \" + rule[1].source);\r\n            }\r\n            if (!rule[1].global) {\r\n                throw new Error(\"Regular expression patterns for a tokenizer should be global: \" + rule[1].source);\r\n            }\r\n        }\r\n    }\r\n    LexerImpl.prototype.parse = function (input) {\r\n        return this.parseNextAvailable(input, 0, 1, 1);\r\n    };\r\n    LexerImpl.prototype.parseNext = function (input, indexStart, rowBegin, columnBegin) {\r\n        if (indexStart === input.length) {\r\n            return undefined;\r\n        }\r\n        var subString = input.substr(indexStart);\r\n        var result;\r\n        for (var _i = 0, _a = this.rules; _i < _a.length; _i++) {\r\n            var _b = _a[_i], keep = _b[0], regexp = _b[1], kind = _b[2];\r\n            regexp.lastIndex = 0;\r\n            if (regexp.test(subString)) {\r\n                var text = subString.substr(0, regexp.lastIndex);\r\n                var rowEnd = rowBegin;\r\n                var columnEnd = columnBegin;\r\n                for (var _c = 0, text_1 = text; _c < text_1.length; _c++) {\r\n                    var c = text_1[_c];\r\n                    switch (c) {\r\n                        case '\\r': break;\r\n                        case '\\n':\r\n                            rowEnd++;\r\n                            columnEnd = 1;\r\n                            break;\r\n                        default: columnEnd++;\r\n                    }\r\n                }\r\n                var newResult = new TokenImpl(this, input, kind, text, { index: indexStart, rowBegin: rowBegin, columnBegin: columnBegin, rowEnd: rowEnd, columnEnd: columnEnd }, keep);\r\n                if (result === undefined || result.text.length < newResult.text.length) {\r\n                    result = newResult;\r\n                }\r\n            }\r\n        }\r\n        if (result === undefined) {\r\n            throw new TokenError({ index: indexStart, rowBegin: rowBegin, columnBegin: columnBegin, rowEnd: rowBegin, columnEnd: columnBegin }, \"Unable to tokenize the rest of the input: \" + input.substr(indexStart));\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    };\r\n    LexerImpl.prototype.parseNextAvailable = function (input, index, rowBegin, columnBegin) {\r\n        var token;\r\n        while (true) {\r\n            token = this.parseNext(input, (token === undefined ? index : token.pos.index + token.text.length), (token === undefined ? rowBegin : token.pos.rowEnd), (token === undefined ? columnBegin : token.pos.columnEnd));\r\n            if (token === undefined) {\r\n                return undefined;\r\n            }\r\n            else if (token.keep) {\r\n                return token;\r\n            }\r\n        }\r\n    };\r\n    return LexerImpl;\r\n}());\r\nfunction buildLexer(rules) {\r\n    return new LexerImpl(rules);\r\n}\r\nexports.buildLexer = buildLexer;\r\n//# sourceMappingURL=Lexer.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.unableToConsumeToken = exports.resultOrError = exports.betterError = void 0;\r\nfunction betterError(e1, e2) {\r\n    if (e1 === undefined) {\r\n        return e2;\r\n    }\r\n    if (e2 === undefined) {\r\n        return e1;\r\n    }\r\n    if (e1.pos === undefined) {\r\n        return e1;\r\n    }\r\n    if (e2.pos === undefined) {\r\n        return e2;\r\n    }\r\n    if (e1.pos.index < e2.pos.index) {\r\n        return e2;\r\n    }\r\n    else if (e1.pos.index > e2.pos.index) {\r\n        return e1;\r\n    }\r\n    else {\r\n        return e1;\r\n    }\r\n}\r\nexports.betterError = betterError;\r\nfunction resultOrError(result, error, successful) {\r\n    if (successful) {\r\n        return {\r\n            candidates: result,\r\n            successful: true,\r\n            error: error\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            successful: false,\r\n            error: error\r\n        };\r\n    }\r\n}\r\nexports.resultOrError = resultOrError;\r\nfunction unableToConsumeToken(token) {\r\n    return {\r\n        kind: 'Error',\r\n        pos: token === undefined ? undefined : token.pos,\r\n        message: \"Unable to consume token: \" + (token === undefined ? '<END-OF-FILE>' : token.text)\r\n    };\r\n}\r\nexports.unableToConsumeToken = unableToConsumeToken;\r\n//# sourceMappingURL=ParserInterface.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.tok = exports.str = exports.nil = void 0;\r\nvar ParserInterface_1 = require(\"./ParserInterface\");\r\nfunction nil() {\r\n    return {\r\n        parse: function (token) {\r\n            return {\r\n                candidates: [{\r\n                        firstToken: token,\r\n                        nextToken: token,\r\n                        result: undefined\r\n                    }],\r\n                successful: true,\r\n                error: undefined\r\n            };\r\n        }\r\n    };\r\n}\r\nexports.nil = nil;\r\nfunction str(toMatch) {\r\n    return {\r\n        parse: function (token) {\r\n            if (token === undefined || token.text !== toMatch) {\r\n                return {\r\n                    successful: false,\r\n                    error: ParserInterface_1.unableToConsumeToken(token)\r\n                };\r\n            }\r\n            return {\r\n                candidates: [{\r\n                        firstToken: token,\r\n                        nextToken: token.next,\r\n                        result: token\r\n                    }],\r\n                successful: true,\r\n                error: undefined\r\n            };\r\n        }\r\n    };\r\n}\r\nexports.str = str;\r\nfunction tok(toMatch) {\r\n    return {\r\n        parse: function (token) {\r\n            if (token === undefined || token.kind !== toMatch) {\r\n                return {\r\n                    successful: false,\r\n                    error: ParserInterface_1.unableToConsumeToken(token)\r\n                };\r\n            }\r\n            return {\r\n                candidates: [{\r\n                        firstToken: token,\r\n                        nextToken: token.next,\r\n                        result: token\r\n                    }],\r\n                successful: true,\r\n                error: undefined\r\n            };\r\n        }\r\n    };\r\n}\r\nexports.tok = tok;\r\n//# sourceMappingURL=TokenParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.seq = void 0;\r\nvar ParserInterface_1 = require(\"./ParserInterface\");\r\n// CodegenOverloadings:End\r\nfunction seq() {\r\n    var ps = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        ps[_i] = arguments[_i];\r\n    }\r\n    return {\r\n        parse: function (token) {\r\n            var error;\r\n            var result = [{ firstToken: token, nextToken: token, result: [] }];\r\n            for (var _i = 0, ps_1 = ps; _i < ps_1.length; _i++) {\r\n                var p = ps_1[_i];\r\n                if (result.length === 0) {\r\n                    break;\r\n                }\r\n                var steps = result;\r\n                result = [];\r\n                for (var _a = 0, steps_1 = steps; _a < steps_1.length; _a++) {\r\n                    var step = steps_1[_a];\r\n                    var output = p.parse(step.nextToken);\r\n                    error = ParserInterface_1.betterError(error, output.error);\r\n                    if (output.successful) {\r\n                        for (var _b = 0, _c = output.candidates; _b < _c.length; _b++) {\r\n                            var candidate = _c[_b];\r\n                            result.push({\r\n                                firstToken: step.firstToken,\r\n                                nextToken: candidate.nextToken,\r\n                                result: step.result.concat([candidate.result])\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return ParserInterface_1.resultOrError(result, error, result.length !== 0);\r\n        }\r\n    };\r\n}\r\nexports.seq = seq;\r\n//# sourceMappingURL=SequencialParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.alt = void 0;\r\nvar ParserInterface_1 = require(\"./ParserInterface\");\r\n// CodegenOverloadings:End\r\nfunction alt() {\r\n    var ps = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        ps[_i] = arguments[_i];\r\n    }\r\n    return {\r\n        parse: function (token) {\r\n            var error;\r\n            var result = [];\r\n            var successful = false;\r\n            for (var _i = 0, ps_1 = ps; _i < ps_1.length; _i++) {\r\n                var p = ps_1[_i];\r\n                var output = p.parse(token);\r\n                error = ParserInterface_1.betterError(error, output.error);\r\n                if (output.successful) {\r\n                    result = result.concat(output.candidates);\r\n                    successful = true;\r\n                }\r\n            }\r\n            return ParserInterface_1.resultOrError(result, error, successful);\r\n        }\r\n    };\r\n}\r\nexports.alt = alt;\r\n//# sourceMappingURL=AlternativeParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.opt_sc = exports.opt = void 0;\r\nvar AlternativeParser_1 = require(\"./AlternativeParser\");\r\nvar TokenParser_1 = require(\"./TokenParser\");\r\nfunction opt(p) {\r\n    return AlternativeParser_1.alt(p, TokenParser_1.nil());\r\n}\r\nexports.opt = opt;\r\nfunction opt_sc(p) {\r\n    return {\r\n        parse: function (token) {\r\n            var output = p.parse(token);\r\n            if (output.successful) {\r\n                return output;\r\n            }\r\n            else {\r\n                return {\r\n                    candidates: [{\r\n                            firstToken: token,\r\n                            nextToken: token,\r\n                            result: undefined\r\n                        }],\r\n                    successful: true,\r\n                    error: output.error\r\n                };\r\n            }\r\n        }\r\n    };\r\n}\r\nexports.opt_sc = opt_sc;\r\n//# sourceMappingURL=OptionalParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.kmid = exports.kright = exports.kleft = exports.apply = void 0;\r\nvar SequencialParser_1 = require(\"./SequencialParser\");\r\nfunction apply(p, callback) {\r\n    return {\r\n        parse: function (token) {\r\n            var output = p.parse(token);\r\n            if (output.successful) {\r\n                return {\r\n                    candidates: output.candidates.map(function (value) {\r\n                        return {\r\n                            firstToken: token,\r\n                            nextToken: value.nextToken,\r\n                            result: callback(value.result, [token, value.nextToken])\r\n                        };\r\n                    }),\r\n                    successful: true,\r\n                    error: output.error\r\n                };\r\n            }\r\n            else {\r\n                return output;\r\n            }\r\n        }\r\n    };\r\n}\r\nexports.apply = apply;\r\nfunction kleft(p1, p2) {\r\n    return apply(SequencialParser_1.seq(p1, p2), function (value) { return value[0]; });\r\n}\r\nexports.kleft = kleft;\r\nfunction kright(p1, p2) {\r\n    return apply(SequencialParser_1.seq(p1, p2), function (value) { return value[1]; });\r\n}\r\nexports.kright = kright;\r\nfunction kmid(p1, p2, p3) {\r\n    return apply(SequencialParser_1.seq(p1, p2, p3), function (value) { return value[1]; });\r\n}\r\nexports.kmid = kmid;\r\n//# sourceMappingURL=ApplyParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lrec_sc = exports.lrec = exports.list_sc = exports.list = exports.repr = exports.rep_sc = exports.rep = void 0;\r\nvar ApplyParser_1 = require(\"./ApplyParser\");\r\nvar ParserInterface_1 = require(\"./ParserInterface\");\r\nvar SequencialParser_1 = require(\"./SequencialParser\");\r\nfunction rep(p) {\r\n    var reprParser = repr(p);\r\n    return {\r\n        parse: function (token) {\r\n            var output = reprParser.parse(token);\r\n            if (output.successful) {\r\n                return {\r\n                    candidates: output.candidates.reverse(),\r\n                    successful: true,\r\n                    error: output.error\r\n                };\r\n            }\r\n            else {\r\n                return output;\r\n            }\r\n        }\r\n    };\r\n}\r\nexports.rep = rep;\r\nfunction rep_sc(p) {\r\n    return {\r\n        parse: function (token) {\r\n            var error;\r\n            var result = [{ firstToken: token, nextToken: token, result: [] }];\r\n            while (true) {\r\n                var steps = result;\r\n                result = [];\r\n                for (var _i = 0, steps_1 = steps; _i < steps_1.length; _i++) {\r\n                    var step = steps_1[_i];\r\n                    var output = p.parse(step.nextToken);\r\n                    error = ParserInterface_1.betterError(error, output.error);\r\n                    if (output.successful) {\r\n                        for (var _a = 0, _b = output.candidates; _a < _b.length; _a++) {\r\n                            var candidate = _b[_a];\r\n                            if (candidate.nextToken !== step.nextToken) {\r\n                                result.push({\r\n                                    firstToken: step.firstToken,\r\n                                    nextToken: candidate.nextToken,\r\n                                    result: step.result.concat([candidate.result])\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (result.length === 0) {\r\n                    result = steps;\r\n                    break;\r\n                }\r\n            }\r\n            return ParserInterface_1.resultOrError(result, error, true);\r\n        }\r\n    };\r\n}\r\nexports.rep_sc = rep_sc;\r\nfunction repr(p) {\r\n    return {\r\n        parse: function (token) {\r\n            var error;\r\n            var result = [{ firstToken: token, nextToken: token, result: [] }];\r\n            for (var i = 0; i < result.length; i++) {\r\n                var step = result[i];\r\n                var output = p.parse(step.nextToken);\r\n                error = ParserInterface_1.betterError(error, output.error);\r\n                if (output.successful) {\r\n                    for (var _i = 0, _a = output.candidates; _i < _a.length; _i++) {\r\n                        var candidate = _a[_i];\r\n                        if (candidate.nextToken !== step.nextToken) {\r\n                            result.push({\r\n                                firstToken: step.firstToken,\r\n                                nextToken: candidate.nextToken,\r\n                                result: step.result.concat([candidate.result])\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return ParserInterface_1.resultOrError(result, error, true);\r\n        }\r\n    };\r\n}\r\nexports.repr = repr;\r\nfunction applyList(value) {\r\n    return [value[0]].concat(value[1].map(function (pair) { return pair[1]; }));\r\n}\r\nfunction list(p, s) {\r\n    return ApplyParser_1.apply(SequencialParser_1.seq(p, rep(SequencialParser_1.seq(s, p))), applyList);\r\n}\r\nexports.list = list;\r\nfunction list_sc(p, s) {\r\n    return ApplyParser_1.apply(SequencialParser_1.seq(p, rep_sc(SequencialParser_1.seq(s, p))), applyList);\r\n}\r\nexports.list_sc = list_sc;\r\nfunction applyLrec(callback) {\r\n    return function (value) {\r\n        var result = value[0];\r\n        for (var _i = 0, _a = value[1]; _i < _a.length; _i++) {\r\n            var tail = _a[_i];\r\n            result = callback(result, tail);\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction lrec(p, q, callback) {\r\n    return ApplyParser_1.apply(SequencialParser_1.seq(p, rep(q)), applyLrec(callback));\r\n}\r\nexports.lrec = lrec;\r\nfunction lrec_sc(p, q, callback) {\r\n    return ApplyParser_1.apply(SequencialParser_1.seq(p, rep_sc(q)), applyLrec(callback));\r\n}\r\nexports.lrec_sc = lrec_sc;\r\n//# sourceMappingURL=RepeativeParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.amb = void 0;\r\nfunction amb(p) {\r\n    return {\r\n        parse: function (token) {\r\n            var branches = p.parse(token);\r\n            if (!branches.successful) {\r\n                return branches;\r\n            }\r\n            var group = new Map();\r\n            for (var _i = 0, _a = branches.candidates; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                var rs = group.get(r.nextToken);\r\n                if (rs === undefined) {\r\n                    group.set(r.nextToken, [r]);\r\n                }\r\n                else {\r\n                    rs.push(r);\r\n                }\r\n            }\r\n            return {\r\n                candidates: Array.from(group.values())\r\n                    .map(function (rs) { return ({\r\n                    firstToken: rs[0].firstToken,\r\n                    nextToken: rs[0].nextToken,\r\n                    result: rs.map(function (r) { return r.result; })\r\n                }); }),\r\n                successful: true,\r\n                error: branches.error\r\n            };\r\n        }\r\n    };\r\n}\r\nexports.amb = amb;\r\n//# sourceMappingURL=AmbiguousParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.errd = exports.err = void 0;\r\nfunction err(p, errorMessage) {\r\n    return {\r\n        parse: function (token) {\r\n            var branches = p.parse(token);\r\n            if (branches.successful) {\r\n                return branches;\r\n            }\r\n            return {\r\n                successful: false,\r\n                error: {\r\n                    kind: 'Error',\r\n                    pos: branches.error.pos,\r\n                    message: errorMessage\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\nexports.err = err;\r\nfunction errd(p, errorMessage, defaultValue) {\r\n    return {\r\n        parse: function (token) {\r\n            var branches = p.parse(token);\r\n            if (branches.successful) {\r\n                return branches;\r\n            }\r\n            return {\r\n                successful: true,\r\n                candidates: [{\r\n                        firstToken: token,\r\n                        nextToken: token,\r\n                        result: defaultValue\r\n                    }],\r\n                error: {\r\n                    kind: 'Error',\r\n                    pos: branches.error.pos,\r\n                    message: errorMessage\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\nexports.errd = errd;\r\n//# sourceMappingURL=ErrorParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.expectSingleResult = exports.expectEOF = exports.rule = void 0;\r\nvar Lexer_1 = require(\"../Lexer\");\r\nvar ParserInterface_1 = require(\"./ParserInterface\");\r\nvar RuleImpl = /** @class */ (function () {\r\n    function RuleImpl() {\r\n        // nothing\r\n    }\r\n    RuleImpl.prototype.setPattern = function (parser) {\r\n        this.parser = parser;\r\n    };\r\n    RuleImpl.prototype.parse = function (token) {\r\n        if (this.parser === undefined) {\r\n            throw new Error(\"Rule has not been initialized. setPattern is required before calling parse.\");\r\n        }\r\n        return this.parser.parse(token);\r\n    };\r\n    return RuleImpl;\r\n}());\r\nfunction rule() {\r\n    return new RuleImpl();\r\n}\r\nexports.rule = rule;\r\nfunction expectEOF(output) {\r\n    if (!output.successful) {\r\n        return output;\r\n    }\r\n    if (output.candidates.length === 0) {\r\n        return {\r\n            successful: false,\r\n            error: {\r\n                kind: 'Error',\r\n                pos: undefined,\r\n                message: 'No result is returned.'\r\n            }\r\n        };\r\n    }\r\n    var filtered = [];\r\n    var error = output.error;\r\n    for (var _i = 0, _a = output.candidates; _i < _a.length; _i++) {\r\n        var candidate = _a[_i];\r\n        if (candidate.nextToken === undefined) {\r\n            filtered.push(candidate);\r\n        }\r\n        else {\r\n            error = ParserInterface_1.betterError(error, {\r\n                kind: 'Error',\r\n                pos: candidate.nextToken === undefined ? undefined : candidate.nextToken.pos,\r\n                message: \"The parser cannot reach the end of file, stops at \\\"\" + candidate.nextToken.text + \"\\\" at position \" + JSON.stringify(candidate.nextToken.pos) + \".\"\r\n            });\r\n        }\r\n    }\r\n    return ParserInterface_1.resultOrError(filtered, error, filtered.length !== 0);\r\n}\r\nexports.expectEOF = expectEOF;\r\nfunction expectSingleResult(output) {\r\n    if (!output.successful) {\r\n        throw new Lexer_1.TokenError(output.error.pos, output.error.message);\r\n    }\r\n    if (output.candidates.length === 0) {\r\n        throw new Lexer_1.TokenError(undefined, 'No result is returned.');\r\n    }\r\n    if (output.candidates.length !== 1) {\r\n        throw new Lexer_1.TokenError(undefined, 'Multiple results are returned.');\r\n    }\r\n    return output.candidates[0].result;\r\n}\r\nexports.expectSingleResult = expectSingleResult;\r\n//# sourceMappingURL=Rule.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./Lexer\"), exports);\r\n__exportStar(require(\"./Parsers/ParserInterface\"), exports);\r\n__exportStar(require(\"./Parsers/TokenParser\"), exports);\r\n__exportStar(require(\"./Parsers/SequencialParser\"), exports);\r\n__exportStar(require(\"./Parsers/AlternativeParser\"), exports);\r\n__exportStar(require(\"./Parsers/OptionalParser\"), exports);\r\n__exportStar(require(\"./Parsers/RepeativeParser\"), exports);\r\n__exportStar(require(\"./Parsers/ApplyParser\"), exports);\r\n__exportStar(require(\"./Parsers/AmbiguousParser\"), exports);\r\n__exportStar(require(\"./Parsers/ErrorParser\"), exports);\r\n__exportStar(require(\"./Parsers/Rule\"), exports);\r\n//# sourceMappingURL=index.js.map","<script lang=\"ts\">\n\t// https://github.com/antonmedv/codejar\n\timport { CodeJar } from \"codejar\";\n\timport Board from \"./Board.svelte\";\n\timport { getLexer, K, KW_HEBREW, parse } from \"./parser\";\n\n\tconst n = 24;\n\tconst board = Array.from(Array(n), () => new Array(n));\n\n\taddEventListener(\"DOMContentLoaded\", () => {\n\t\tconst editor = document.getElementById(\"editor\") as HTMLTextAreaElement;\n\t\tconst lexer = getLexer(true, KW_HEBREW);\n\n\t\tfunction sleep(ms: number) {}\n\n\t\tfunction color(i: number, j: number, v: number) {\n\t\t\tconsole.log(i, j, v);\n\t\t\tif (0 <= i && i < n && 0 <= j && j < n) {\n\t\t\t\tboard[i][j] = v;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t\tfunction token(text: string, kind: number) {\n\t\t\tif (kind === K.WS) {\n\t\t\t\treturn document.createTextNode(text);\n\t\t\t} else {\n\t\t\t\tconst e = document.createElement(\"t\");\n\t\t\t\te.innerText = text;\n\t\t\t\tconst isKw = kind in [K.If, K.Each, K.From, K.To, K.End];\n\t\t\t\te.setAttribute(\"kw\", isKw ? \"true\" : \"false\");\n\t\t\t\te.setAttribute(\n\t\t\t\t\t\"comment\",\n\t\t\t\t\tkind === K.Comment ? \"true\" : \"false\"\n\t\t\t\t);\n\t\t\t\treturn e;\n\t\t\t}\n\t\t}\n\n\t\tconst highlight = (editor: HTMLElement) => {\n\t\t\tconst code = editor.textContent;\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tlet tokens = lexer.parse(code);\n\t\t\tconsole.log(tokens);\n\t\t\twhile (tokens) {\n\t\t\t\tdiv.appendChild(token(tokens.text, tokens.kind));\n\t\t\t\ttokens = tokens.next;\n\t\t\t}\n\t\t\tconsole.log(div);\n\t\t\teditor.innerHTML = div.innerHTML;\n\t\t};\n\n\t\tconst jar = CodeJar(editor, highlight, {\n\t\t\ttab: \"  \",\n\t\t\tindentOn: /.*:$/,\n\t\t});\n\n\t\tfunction exec(code: string) {\n\t\t\tlocation.hash = encodeURIComponent(code);\n\t\t\tconsole.log(\"executing\", code);\n\t\t\tboard.forEach((row) => row.fill(0));\n\t\t\tconst host = {\n\t\t\t\tvars: {},\n\t\t\t\tfuncs: {\n\t\t\t\t\tsleep,\n\t\t\t\t\tcolor,\n\t\t\t\t\tצבע: color,\n\t\t\t\t\tנמנם: sleep,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst prog = parse(code, {\n\t\t\t\thost,\n\t\t\t\tlexer: getLexer(false, KW_HEBREW),\n\t\t\t});\n\n\t\t\tprog.forEach((s) => s.eval());\n\t\t}\n\n\t\tjar.onUpdate(exec);\n\t\tlet code = `# דוגמה לשימוש בפונקציה צבע\n\t\t\nלכל שורה מ 0 עד 23:\n  לכל עמודה מ 0 עד 23:\n    צבע(שורה, עמודה, (שורה + עמודה) % 2)\n  סוף\nסוף`;\n\t\tif (location.hash) {\n\t\t\tcode = location.hash.slice(1);\n\t\t\tconsole.log(code);\n\t\t\tcode = decodeURIComponent(code);\n\t\t\tconsole.log(code);\n\t\t}\n\t\tjar.updateCode(code);\n\t\texec(code);\n\t});\n</script>\n\n<main dir=\"rtl\">\n\t<div class=\"edit\">\n\t\t<div id=\"editor\" />\n\t\t<Board {board} />\n\t</div>\n\t<div class=\"colors\">\n\t\t{#each [...Array(16).keys()] as i}\n\t\t\t<div data-color={i}>\n\t\t\t\t{i}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 80em;\n\t\tmargin: 2em auto;\n\t}\n\n\t.edit {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t#editor {\n\t\tflex-grow: 1;\n\t\tborder: 1px solid #ccc;\n\t\tfont-size: 16px;\n\t\tfont-family: Consolas, monospace;\n\t\tline-height: 1.5;\n\t\tpadding: 0.5em;\n\t\tmargin: 0;\n\t\tmargin-left: 1em;\n\t}\n\n\t.colors {\n\t\tmargin-top: 1em;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\talign-items: stretch;\n\t}\n\n\t[data-color] {\n\t\tdisplay: flex;\n\t\theight: 3em;\n\t\tflex-grow: 1;\n\t\tfont-size: 2em;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tcolor: white;\n\t}\n\n\t[data-color]:first-child {\n\t\tcolor: #333;\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","globalWindow","window","CodeJar","editor","highlight","opt","assign","tab","indentOn","spellcheck","catchTab","preserveIdent","addClosing","history","prev","listeners","at","focus","style","outline","overflowWrap","overflowY","whiteSpace","isLegacy","contentEditable","debounceHighlight","debounce","pos","save","restore","recording","shouldRecord","event","isUndo","isRedo","key","startsWith","debounceRecordHistory","recordHistory","on","addEventListener","s","getSelection","start","end","dir","undefined","anchorNode","anchorOffset","focusNode","focusOffset","nodeType","Node","ELEMENT_NODE","visit","el","TEXT_NODE","nodeValue","normalize","startNode","endNode","startOffset","endOffset","current","len","setBaseAndExtent","beforeCursor","r0","getRangeAt","r","createRange","selectNodeContents","setEnd","startContainer","toString","afterCursor","setStart","endContainer","legacyNewLineFix","preventDefault","stopPropagation","html","innerHTML","lastRecord","visitor","queue","firstChild","nextSibling","isCtrl","metaKey","ctrlKey","shiftKey","code","replace","execCommand","cb","wait","timeout","args","clearTimeout","setTimeout","findPadding","j","test","substring","textContent","_a","DOCUMENT_FRAGMENT_NODE","defaultPrevented","before","after","padding","newLinePadding","handleNewLine","Math","min","handleTabCharacters","open","close","codeAfter","codeBefore","escapeCharacter","substr","charAfter","includes","wrapText","handleSelfClosingCharacters","record","handleUndoRedo","isComposing","_event","originalEvent","clipboardData","getData","handlePaste","updateOptions","newOptions","updateCode","onUpdate","destroy","removeEventListener","board","K","extendStatics","__extends","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","prototype","posToString","JSON","stringify","defineProperty","exports","TokenError","_super","errorMessage","_this","call","Error","TokenRangeError","first","next","extractByPositionRange","input","firstIndex","nextIndex","TokenImpl","lexer","kind","keep","get","nextToken","parseNextAvailable","rowEnd","columnEnd","enumerable","configurable","LexerImpl","rules","_i","rule","source","global","parse","parseNext","indexStart","rowBegin","columnBegin","result","subString","_b","regexp","lastIndex","_c","text_1","newResult","token","e1","e2","error","successful","candidates","message","firstToken","toMatch","ParserInterface_1","unableToConsumeToken","ps","arguments","ps_1","steps","steps_1","step","output","betterError","candidate","concat","resultOrError","AlternativeParser_1","alt","TokenParser_1","nil","apply","p1","p2","SequencialParser_1","seq","p3","rep","reprParser","repr","reverse","rep_sc","applyList","pair","applyLrec","tail","ApplyParser_1","q","branches","group","rs","set","values","defaultValue","RuleImpl","setPattern","parser","filtered","Lexer_1","__createBinding","o","k","k2","__exportStar","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","KW_ENGLISH","If","Each","From","To","End","KW_HEBREW","getLexer","keepWs","KW","buildLexer","WS","Comment","RegExp","Number","Assign","Op1","Op2","Comma","Col","LP","RP","Name","ops","outros","getElementById","sleep","ms","color","v","console","log","e","innerText","isKw","jar","div","tokens","exec","location","hash","encodeURIComponent","row","prog","host","vars","funcs","expOp","eval","ARGS","TERM","FACTOR","EXP","FUNC_CALL","ASSIGN","EACH","IF","COMMENT","STMT","PROG","tok","kmid","lrec_sc","arg","num","n","vals","x","$1","$2","fromExp","$3","toExp","$4","$5","cond","_","exp","expectSingleResult","expectEOF","slice","decodeURIComponent","body"],"mappings":"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"}